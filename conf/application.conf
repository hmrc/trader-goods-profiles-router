# Copyright 2024 HM Revenue & Customs
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

include "backend.conf"

# This is the main configuration file for the application.
# ~~~~~

appName = trader-goods-profiles-router

# Http Client V2
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.HttpClientV2Module"

# Json error handler
play.http.errorHandler = "uk.gov.hmrc.play.bootstrap.backend.http.JsonErrorHandler"

#Auth Modules
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.AuthModule"
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.HttpClientModule"

# Play Modules
play.modules.enabled += "uk.gov.hmrc.tradergoodsprofilesrouter.config.Module"


# The application languages
# ~~~~~
play.i18n.langs = ["en"]

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# !!!WARNING!!! DO NOT CHANGE THIS ROUTER
play.http.router = prod.Routes

# Controller
# ~~~~~
# By default all controllers will have authorisation, logging and
# auditing (transaction monitoring) enabled.
# The below controllers are the default exceptions to this rule.

controllers {

  uk.gov.hmrc.tradergoodsprofilesrouter.controllers.GetRecordsController = {
      needsAuth = false
      needsLogging = true
    }
}

# Logger
# ~~~~~
# You can also configure logback (http://logback.qos.ch/), by providing a logger.xml file in the conf directory .

# Root logger:
logger.root = ERROR

# Logger used by the framework:
logger.play = INFO

# Logger provided to your application:
logger.application = DEBUG

# Metrics plugin settings - graphite reporting is configured on a per env basis
metrics {
  enabled = true
}

auditing {
    enabled = true
}
# Microservice specific config


microservice {
  services {
    auth {
      host = localhost
      port = 8500
    }
    hawk {
        protocol = http
        host = localhost
        port = 10903
        forwarded-host = "MDTP"

        get-records  = "/tgp/getrecords/v1"
        create-record  = "/tgp/createrecord/v1"
        remove-record  = "/tgp/removerecord/v1"
        update-record  = "/tgp/updaterecord/v1"
        maintain-profile  = "/tgp/maintainprofile/v1"
        get-profile = "/tgp/getprofile/v1"
        create-profile  = "/tgp/createprofile/v1"
        record-update-token = "c29tZS10b2tlbgo="
        record-get-token = "c29tZS10b2tlbgo="
        record-create-token = "c29tZS10b2tlbgo="
        record-remove-token = "c29tZS10b2tlbgo="
        maintain-profile-token = "c29tZS10b2tlbgo="
        get-profile-token = "c29tZS10b2tlbgo="
        create-profile-token = "c29tZS10b2tlbgo="
        default-size = 500
        max-size = 500
    }
    pega {
        protocol = http
        host = localhost
        port = 10903
        forwarded-host = "MDTP"

        get-records  = "/tgp/getrecords/v1"
        request-advice  = "/tgp/createaccreditation/v1"
        withdraw-advice = "/tgp/withdrawaccreditation/v1"
        download-trader-data = "/tgp/record/v1"
        request-advice-token = "dummyRequestAdviceBearerToken"
        record-get-token = "dummyRecordGetBearerToken"
        withdraw-advice-token = "dummyWithdrawAdviceBearerToken"
        download-trader-data-token = "dummyDownloadTraderDataToken"
    }
  }
}

features {
     drop_1_1_enabled = false
     drop2Enabled = false
 }

